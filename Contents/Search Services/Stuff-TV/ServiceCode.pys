import re

BASE_URL = "http://www.stuff.tv"
SEARCH_URL = "http://www.stuff.tv/search/video?search=%s"

def Search(query):

  # Compute the URL and download the HTML
  url = SEARCH_URL % String.Quote(query)
  search_page = HTML.ElementFromURL(url)
  search_results = search_page.xpath("//li[contains(@class, 'videoHeadline')]")
  
  search_page = HTML.ElementFromURL(url)
  search_page_initial_node = search_page.xpath("//div[@class='inner-container']/h2[contains(text(), 'Stuff Video')]/..")[0]
  search_results = search_page_initial_node.xpath(".//li[contains(concat(' ', normalize-space(@class), ' '), ' product')]")
   

  # Create a container to hold the results
  c = ObjectContainer()
  for item in search_results:  
    try:
            
      # Attempt to determine the title
      title = item.xpath(".//h3/a/text()")[0]
            
      # Attempt to determine the absolue URL to the page
      relative_url = item.xpath(".//h3/a")[0].get('href')
      url = BASE_URL + String.Quote(relative_url)
            
      # [Optional] - Attempt to determine the thumbnail
      thumb = None
      try: 
        thumb_url = item.xpath(".//a/img")[0].get('src')
        thumb = "http:" + String.Quote(thumb_url[5:])
      except: pass
      
      # [Optional] - Attempt to create a sensible description
      description = None
      try:
        date = item.xpath(".//p[@class='meta']/span/text()")[0]
        type = info.xpath(".//p[@class='meta']/text()")[0]
        description = date + " | " + type
      except: pass

      # Add details of the located video clip
      c.add(VideoClipObject(
        title = title,
        summary = description,
        thumb = thumb,
        url = url))
                
    except:
      Log.Exception("Exception adding video result")
      
  return c